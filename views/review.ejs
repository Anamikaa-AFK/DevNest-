<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>reviews-watch and codexc</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="container">
        <nav>
            <a class="logo"  href="http://localhost:8080/watchandcode">
                <img class="logoimg" src="/images/logo.png" alt="Clickable" >
             </a>
            <div class="nav_content">
                <a href="http://localhost:8080/watchandcode/curriculum">Curriculum</a>
                <a href="http://localhost:8080/watchandcode/feature">Features</a>
                <a href="http://localhost:8080/watchandcode/pricing">Pricing</a>
                <a href="http://localhost:8080/watchandcode/review">Reviews</a>
                <a href="http://localhost:8080/watchandcode/blog">Blog</a>
                <a href="https://www.youtube.com/channel/UC0NG3Zs8gvNzXG_OwaBdfbg">Youtube</a>
                <button id="loginbtn">Login</button>
               <form method="get" action="http://localhost:8080/watchandcode/join">
                <button class="programbtn">Join Our Program</button></form>
            </div>
        </nav>
    </div>

    <div class="heading">
        <h1 class="h1heading" >Verified Reviews</h1>
        <p class="para1" style="margin-top: 0;">Hear directly from our students in their own words. Reviewers were enrolled in the <br> Premium Membership Program at the time of writing.</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem; margin-top: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 2rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <div class="b11" style="margin-left: 23%; border-radius: 2%; height: auto; margin-bottom: 4rem;">
        <div>
            <h5  class="heading5" style="font-weight: 500;">Jo King-Yost</h5>
            <h6 class="heading6">PStaff Production Enginee <br>May 7, 2025</h6>
            
        </div>
        <p class="p4">I’m a driven and independent learner. Before Watch and Code, I pushed myself through tough self-paced courses—including a specialization in C. I could pass challenging auto-graded assignments, but I longed to contribute to something real—like open source—yet still didn’t feel confident tackling real-world engineering problems. I needed more realistic, confidence-building materials and mentorship to help me understand what gaps remained, where I already had solid footing, and what to focus on next.<br><br>
            I had the opportunity to learn from Lily and Gordon in their free "Programming Foundations Live" course, an outreach program great for those of us not formally trained in computer science (CS). When we started, I was 99% sure I wouldn't be enrolling in their monthly program, but during our six weeks together, their teaching approach impressed me.<br><br>
            They managed to abstract out core CS and programming concepts without getting lost in syntax, environment setup, or historical background. In past courses, those distracted me; here, the focus was precise and intentional. Plus, their carefully crafted homework assignments and hand-graded feedback demonstrated extreme care. I was persuaded to give the premium program a try. It sure seemed like they were offering *exactly* the sort of teaching and mentorship I'd been craving. I'm so glad I went for it.<br><br>
            The premium program's deepened my learning of foundational CS concepts. Even more, it's helped me refine my problem-solving *process*. It’s not about solving *this* problem—it's about how I approach *any* problem: how I reason, experiment, and iterate with care and clarity. This grows my skill at being a methodical problem-solver and gives me growing confidence to tackle harder engineering problems independently. <br><br>
            Lily and Gordon's hand-graded feedback on formal assessments provides a powerful feedback loop. Even when I pass, they offer suggestions for improvement—or reinforce what I did well. When I fail, their feedback helps me puzzle through the failure on my own, rather than just telling me what to fix. Every assignment is a learning experience, not simply a pass/fail checkpoint. <br><br>
            Another great part of the program is the weekly live session with other students. We get a programming challenge, work alone for 20 minutes, submit whatever we have, and then discuss. A great opportunity to practice the nerve-wracking, timed programming you'll face in interviews in a low-stakes environment. Plus, you get to hear everyone’s raw strategies—a great way to learn, and, if you’re low-confidence like me, a great way to see many people often struggle with the same things. (It’s not just me! These things are hard!)</p>
    </div>

    <footer class="footer" >
        <div class="footer-left">Watch and Code</div>
        <div class="footer-right">
            <a style="text-decoration: none; display: block;" href="mailto:team@watchandcode.com">team@watchandcode.com</a>
            <a href="#">Youtube </a>
            <a href="#">LinkedIn</a>
            <a href="#">Terms</a>
            <a href="#">Privacy </a>
        </div>
        
    </footer>
    
</body>
</html>